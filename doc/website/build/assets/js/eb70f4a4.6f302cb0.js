"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[154],{3905:(n,t,e)=>{e.d(t,{Zo:()=>p,kt:()=>m});var i=e(7294);function l(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function r(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,i)}return e}function a(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?r(Object(e),!0).forEach((function(t){l(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function o(n,t){if(null==n)return{};var e,i,l=function(n,t){if(null==n)return{};var e,i,l={},r=Object.keys(n);for(i=0;i<r.length;i++)e=r[i],t.indexOf(e)>=0||(l[e]=n[e]);return l}(n,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(i=0;i<r.length;i++)e=r[i],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(l[e]=n[e])}return l}var s=i.createContext({}),u=function(n){var t=i.useContext(s),e=t;return n&&(e="function"==typeof n?n(t):a(a({},t),n)),e},p=function(n){var t=u(n.components);return i.createElement(s.Provider,{value:t},n.children)},y="mdxType",c={inlineCode:"code",wrapper:function(n){var t=n.children;return i.createElement(i.Fragment,{},t)}},v=i.forwardRef((function(n,t){var e=n.components,l=n.mdxType,r=n.originalType,s=n.parentName,p=o(n,["components","mdxType","originalType","parentName"]),y=u(e),v=l,m=y["".concat(s,".").concat(v)]||y[v]||c[v]||r;return e?i.createElement(m,a(a({ref:t},p),{},{components:e})):i.createElement(m,a({ref:t},p))}));function m(n,t){var e=arguments,l=t&&t.mdxType;if("string"==typeof n||l){var r=e.length,a=new Array(r);a[0]=v;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=n,o[y]="string"==typeof n?n:l,a[1]=o;for(var u=2;u<r;u++)a[u]=e[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,e)}v.displayName="MDXCreateElement"},6163:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var i=e(7462),l=(e(7294),e(3905));const r={sidebar_position:2},a="\u7528\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u6280\u80fd",o={unversionedId:"api/skill",id:"api/skill",title:"\u7528\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u6280\u80fd",description:"\u6ce8\uff1a\u672c\u7ae0\u5c06\u4f1a\u5927\u91cf\u5f15\u7528\u6e90\u7801 \u70b9\u51fb\u53f3\u4fa7\u76ee\u5f55\u53ef\u4ee5\u5feb\u901f\u5b9a\u4f4d",source:"@site/docs/2-api/skill.md",sourceDirName:"2-api",slug:"/api/skill",permalink:"/RaySkillSystem/docs/api/skill",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/2-api/skill.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\u57fa\u7840\u7bc7\u7ae0",permalink:"/RaySkillSystem/docs/api/base"},next:{title:"\u7b54\u7591\u89e3\u60d1",permalink:"/RaySkillSystem/docs/category/\u7b54\u7591\u89e3\u60d1"}},s={},u=[{value:"\u63a5\u53e3\u8bb2\u89e3",id:"\u63a5\u53e3\u8bb2\u89e3",level:2},{value:"Kotlin\u521b\u5efa",id:"kotlin\u521b\u5efa",level:2},{value:"Java\u4ee3\u7801\u5b9e\u73b0",id:"java\u4ee3\u7801\u5b9e\u73b0",level:2}],p={toc:u},y="wrapper";function c(n){let{components:t,...e}=n;return(0,l.kt)(y,(0,i.Z)({},p,e,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u7528\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u6280\u80fd"},"\u7528\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u6280\u80fd"),(0,l.kt)("p",null,"\u6ce8\uff1a\u672c\u7ae0\u5c06\u4f1a\u5927\u91cf\u5f15\u7528\u6e90\u7801 \u70b9\u51fb\u53f3\u4fa7\u76ee\u5f55\u53ef\u4ee5\u5feb\u901f\u5b9a\u4f4d"),(0,l.kt)("h2",{id:"\u63a5\u53e3\u8bb2\u89e3"},"\u63a5\u53e3\u8bb2\u89e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'package top.maplex.rayskillsystem.skill\n\nimport org.bukkit.Material\nimport org.bukkit.entity.LivingEntity\nimport org.bukkit.inventory.ItemStack\nimport taboolib.platform.util.buildItem\nimport top.maplex.rayskillsystem.utils.set\nimport top.maplex.rayskillsystem.utils.toConsole\n\ninterface AbstractSkill {\n\n    // \u6280\u80fd\u540d\u79f0\n    val name: String\n\n    // \u6280\u80fd\u7c7b\u578b \u5e76\u65e0\u4f5c\u7528 \u7559\u7ed9\u62d3\u5c55\u8fdb\u884c\u5224\u65ad\n    val type: String\n\n    // \u83b7\u53d6\u6280\u80fd\u7684\u51b7\u5374\n    fun getCooldown(livingEntity: LivingEntity, level: Int): Long {\n        return 0\n    }\n\n    // \u663e\u793a\u7269\u54c1\n    fun showItem(livingEntity: LivingEntity, level: Int): ItemStack {\n        return buildItem(Material.PAPER) {\n            this.name = "&f${this@AbstractSkill.name}"\n            colored()\n        }.apply {\n            set("RaySkill.type", this@AbstractSkill.name)\n        }\n    }\n\n    // \u65bd\u6cd5\u6761\u4ef6 \u6700\u5148\u5224\u65ad \u901a\u5e38\u5199\u65bd\u6cd5\u6761\u4ef6\n    fun onCondition(livingEntity: LivingEntity, level: Int): Boolean = true\n\n    // \u8fd0\u884c\u524d\u6267\u884c \u53ef\u4ee5\u7528\u6765\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8fd0\u884c\n    fun onPreRun(livingEntity: LivingEntity, level: Int): Boolean = true\n\n    // \u8fd0\u884c\u4ee3\u7801 \u53ef\u4ee5\u7528\u6765\u5199\u6280\u80fd\u7684\u4e3b\u8981\u903b\u8f91\n    fun onRun(livingEntity: LivingEntity, level: Int): Boolean = true\n\n    // \u8fd0\u884c\u540e\u6267\u884c \u53ef\u4ee5\u7528\u6765\u5199\u6280\u80fd\u7684\u540e\u7eed\u903b\u8f91 \u6536\u5c3e\u64cd\u4f5c\n    fun onOver(livingEntity: LivingEntity, level: Int): Boolean = true\n\n    // \u6ce8\u518c\n    // \u6ce8\u610f \u6ce8\u518c\u6280\u80fd\u91c7\u7528\u7684\u662f\u8986\u76d6\u7684\u5f62\u5f0f\n    // \u5982\u975e\u8bbe\u8ba1 \u8bf7\u4e0d\u8981\u5c06\u6280\u80fd\u540d\u8bbe\u7f6e\u91cd\u590d\n    fun register() {\n        SkillManager.skills[name] = this\n        toConsole("\u6ce8\u518c\u6280\u80fd:&f $name")\n    }\n\n}\n')),(0,l.kt)("h2",{id:"kotlin\u521b\u5efa"},"Kotlin\u521b\u5efa"),(0,l.kt)("p",null,"\u7531\u4e8e\u8fd9\u90e8\u5206\u662f\u7531Kotlin\u8fdb\u884c\u5f00\u53d1 \u57fa\u4e8eKotlin\u5f97\u5929\u72ec\u539a\u7684\u517c\u5bb9\u6027"),(0,l.kt)("p",null,"\u4f60\u5e76\u4e0d\u9700\u8981\u5b8c\u5168\u5b9e\u73b0\u63a5\u53e3\u91cc\u7684\u65b9\u6cd5"),(0,l.kt)("p",null,"\u53ea\u9700\u8981\u9009\u62e9\u4f60\u8981\u7684\u5185\u5bb9 \u8fdb\u884c\u5b9e\u73b0\u5373\u53ef"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'import org.bukkit.entity.LivingEntity\nimport org.bukkit.entity.Player\nimport top.maplex.rayskillsystem.skill.AbstractSkill\nimport top.maplex.rayskillsystem.skill.tools.team.TeamManager\nimport top.maplex.rayskillsystem.skill.tools.target.TargetRange\nimport top.maplex.rayskillsystem.utils.auto.RaySkillSystem\n// highlight-next-line\n@RaySkillSystem // \u4f7f\u7528\u6ce8\u89e3 \u81ea\u52a8\u6ce8\u5165\nobject SkillTest : AbstractSkill {\n\n    override val name: String = "\u6d4b\u8bd5"\n\n    override val type: String = "\u65e0"\n\n    override fun getCooldown(livingEntity: LivingEntity, level: Int): Long {\n        return 3 * 20\n    }\n    \n    override fun onCondition(livingEntity: LivingEntity, level: Int): Boolean {\n        return true\n    }\n\n    override fun onRun(livingEntity: LivingEntity, level: Int): Boolean {\n        TargetRange.get(livingEntity, 10.0, false).filter {\n            !TeamManager.canAttack(livingEntity, it)\n        }.let { list ->\n            list.forEach {\n                if (it is Player) {\n                    it.sendMessage("\xa7c\u4f60\u88ab${livingEntity.name}\u653b\u51fb\u4e86")\n                }\n                it.damage(10.0, livingEntity)\n            }\n        }\n        return true\n    }\n}\n\n')),(0,l.kt)("h2",{id:"java\u4ee3\u7801\u5b9e\u73b0"},"Java\u4ee3\u7801\u5b9e\u73b0"),(0,l.kt)("p",null,"\u7531\u4e8eJava\u8bbe\u8ba1\u95ee\u9898 \u5e76\u4e0d\u53ef\u4ee5\u7701\u7565\u63a5\u53e3\u91cc\u9762\u7684\u65b9\u6cd5"),(0,l.kt)("p",null,"\u6240\u4ee5\u9700\u8981\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u5199\u51fa\u6765"),(0,l.kt)("p",null,"\u4f46\u662f\u4f60\u4ecd\u7136\u53ef\u4ee5\u6267\u884c \u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5 \u8fdb\u884c\u5feb\u901f\u5b9e\u73b0"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"AbstractSkill.DefaultImpls.xxx")," \u76f8\u5f53\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"this.super.xxx")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'import org.bukkit.entity.LivingEntity;\nimport org.bukkit.entity.Player;\nimport org.bukkit.inventory.ItemStack;\nimport org.jetbrains.annotations.NotNull;\nimport top.maplex.rayskillsystem.skill.AbstractSkill;\nimport top.maplex.rayskillsystem.utils.auto.RaySkillSystem;\n\n@RaySkillSystem\npublic class TestJavaSkill implements AbstractSkill {\n    @NotNull\n    @Override\n    public String getName() {\n        return "\u6d4b\u8bd5Java\u6280\u80fd";\n    }\n\n    @NotNull\n    @Override\n    public String getType() {\n        return "\u65e0";\n    }\n\n    @Override\n    public long getCooldown(@NotNull LivingEntity livingEntity, int level) {\n        return 100;\n    }\n\n    @Override\n    public boolean onCondition(@NotNull LivingEntity livingEntity, int level) {\n        if (livingEntity instanceof Player && ((Player) livingEntity).getLevel() >= 20) {\n            return true;\n        } else {\n            livingEntity.sendMessage("\u4f60\u7684\u7b49\u7ea7\u65e0\u6cd5\u65bd\u5c55\u5982\u6b64\u9ad8\u6df1\u7684\u6280\u80fd");\n            return false;\n        }\n    }\n\n    @Override\n    public boolean onRun(@NotNull LivingEntity livingEntity, int level) {\n        System.out.println("\u6280\u80fd\u8fd0\u884c\u4e86\uff01");\n        return true;\n    }\n\n    @NotNull\n    @Override\n    public ItemStack showItem(@NotNull LivingEntity livingEntity, int level) {\n        return AbstractSkill.DefaultImpls.showItem(this, livingEntity, level);\n    }\n\n    @Override\n    public boolean onPreRun(@NotNull LivingEntity livingEntity, int level) {\n        return AbstractSkill.DefaultImpls.onPreRun(this, livingEntity, level);\n    }\n\n    @Override\n    public boolean onOver(@NotNull LivingEntity livingEntity, int level) {\n        return AbstractSkill.DefaultImpls.onOver(this, livingEntity, level);\n    }\n\n    @Override\n    public void register() {\n        AbstractSkill.DefaultImpls.register(this);\n    }\n}\n\n')))}c.isMDXComponent=!0}}]);